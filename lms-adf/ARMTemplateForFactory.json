{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "lms-adf"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"lms_adls_ls_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'lms_adls_ls'"
		},
		"lms_git_ls_inc_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'lms_git_ls_inc'"
		},
		"lms_ls_2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'lms_ls_2'"
		},
		"lms_sql_ls_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'lms_sql_ls'"
		},
		"plmsdb_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'plmsdb'"
		},
		"sql_ls_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'sql_ls'"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "plmsserver.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "plms_db"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "plmsadmin"
		},
		"lms_adls_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://lmsstorageaccount2025.dfs.core.windows.net/"
		},
		"lms_git_ls_inc_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/sahankumar222/Library-Management-System/refs/heads/main/Raw-Data/"
		},
		"lms_git_ls_inc_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sahankumar222@gmail.com"
		},
		"lms_ls_2_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "lms-server-sql.database.windows.net"
		},
		"lms_ls_2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "lms-database"
		},
		"lms_ls_2_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqladmin"
		},
		"lms_sql_ls_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "lms-server-sql.database.windows.net"
		},
		"lms_sql_ls_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "lms-database"
		},
		"lms_sql_ls_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqladmin"
		},
		"plmsdb_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "plmsserver.database.windows.net"
		},
		"plmsdb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "plms_db"
		},
		"plmsdb_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "plmsadmin"
		},
		"sql_ls_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "plmsserver.database.windows.net"
		},
		"sql_ls_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "plms_db"
		},
		"sql_ls_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "plmsadmin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/new_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sqltable_load",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "sql_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "new_load",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "sqltable_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "new_load",
							"value": {
								"value": "@concat(\n    if(equals(substring(activity('sqltable_load').output.firstRow.last_name, 5, 2), 'Q4'),\n        string(add(int(substring(activity('sqltable_load').output.firstRow.last_name, 0, 4)), 1)),\n        substring(activity('sqltable_load').output.firstRow.last_name, 0,4)\n    ), '_Q',\n    if(equals(substring(activity('sqltable_load').output.firstRow.last_name, 5, 2), 'Q4'),\n        '1',\n        string(add(int(substring(activity('sqltable_load').output.firstRow.last_name, 6, 1)), 1))\n    )\n)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"new_load": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sql_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "last_load",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "lms_sql_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "new_load",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "last_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "new_load",
							"value": {
								"value": "@concat(\n    if(equals(substring(activity('last_load').output.firstRow.LastLoadedQuarter, 5, 2), 'Q4'),\n        string(add(int(substring(activity('last_load').output.firstRow.LastLoadedQuarter, 0, 4)), 1)),\n        substring(activity('last_load').output.firstRow.LastLoadedQuarter, 0, 4)\n    ), '_Q',\n    if(equals(substring(activity('last_load').output.firstRow.LastLoadedQuarter, 5, 2), 'Q4'),\n        '1',\n        string(add(int(substring(activity('last_load').output.firstRow.LastLoadedQuarter, 6, 1)), 1))\n    )\n)\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "transaction",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "new_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "lms_git_ds",
								"type": "DatasetReference",
								"parameters": {
									"new_load": {
										"value": "@variables('new_load')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "lms_adls_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "transaction",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[incr_load_proc]",
							"storedProcedureParameters": {
								"new_load": {
									"value": {
										"value": "@variables('new_load')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lms_sql_ls",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"last_load": {
						"type": "string",
						"defaultValue": "2020_Q1"
					}
				},
				"variables": {
					"new_load": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-13T10:13:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/lms_sql_ds')]",
				"[concat(variables('factoryId'), '/datasets/lms_git_ds')]",
				"[concat(variables('factoryId'), '/datasets/lms_adls_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/lms_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testing_bronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "last_load",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "lms_sql_ds2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "new_load",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "last_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "new_load",
							"value": {
								"value": "@concat(\n    if(equals(substring(activity('last_load').output.firstRow.LastLoadedQuarter, 5, 2), 'Q4'),\n        string(add(int(substring(activity('last_load').output.firstRow.LastLoadedQuarter, 0, 4)), 1)),\n        substring(activity('last_load').output.firstRow.LastLoadedQuarter, 0, 4)\n    ), '_Q',\n    if(equals(substring(activity('last_load').output.firstRow.LastLoadedQuarter, 5, 2), 'Q4'),\n        '1',\n        string(add(int(substring(activity('last_load').output.firstRow.LastLoadedQuarter, 6, 1)), 1))\n    )\n)\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "new_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "lms_git_ds",
								"type": "DatasetReference",
								"parameters": {
									"new_load": {
										"value": "@variables('new_load')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "lms_new_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "update",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[incr_load_pro1]",
							"storedProcedureParameters": {
								"new_load": {
									"value": {
										"value": "@variables('new_load')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lms_ls_2",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"last_load": {
						"type": "string",
						"defaultValue": "2020_Q1"
					}
				},
				"variables": {
					"new_load": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-14T05:19:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/lms_sql_ds2')]",
				"[concat(variables('factoryId'), '/datasets/lms_git_ds')]",
				"[concat(variables('factoryId'), '/datasets/lms_new_adls')]",
				"[concat(variables('factoryId'), '/linkedServices/lms_ls_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lms_adls_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lms_adls_ls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "testing"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lms_adls_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lms_git_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lms_git_ls_inc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"new_load": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "Transaction/@{concat('transactions_', dataset().new_load, '.csv')}\n",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lms_git_ls_inc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lms_new_adls')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lms_adls_ls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "new"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lms_adls_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lms_sql_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lms_sql_ls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DatasetName",
						"type": "varchar"
					},
					{
						"name": "LastLoadedQuarter",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "IncrementalLoadTracker"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lms_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lms_sql_ds2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lms_ls_2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DatasetName",
						"type": "varchar"
					},
					{
						"name": "LastLoadedQuarter",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "IncrementLoad"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lms_ls_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "plmsdb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "IncrementalLoad"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/plmsdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lms_adls_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('lms_adls_ls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('lms_adls_ls_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lms_git_ls_inc')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('lms_git_ls_inc_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('lms_git_ls_inc_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('lms_git_ls_inc_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lms_ls_2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('lms_ls_2_properties_typeProperties_server')]",
					"database": "[parameters('lms_ls_2_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('lms_ls_2_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('lms_ls_2_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lms_sql_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('lms_sql_ls_properties_typeProperties_server')]",
					"database": "[parameters('lms_sql_ls_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('lms_sql_ls_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('lms_sql_ls_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/plmsdb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('plmsdb_properties_typeProperties_server')]",
					"database": "[parameters('plmsdb_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('plmsdb_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('plmsdb_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('sql_ls_properties_typeProperties_server')]",
					"database": "[parameters('sql_ls_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('sql_ls_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('sql_ls_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "testing",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 5,
					"startTime": "2025-02-13T10:23:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/testing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_new')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "testing_bronze",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 5,
					"startTime": "2025-02-14T05:16:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/testing_bronze')]"
			]
		}
	]
}